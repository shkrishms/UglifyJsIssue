define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Helper to find the index of an item within an array, using a callback to
     * determine the match.
     *
     * @public
     * @param array - Array to search.
     * @param cb - Callback which returns true on matches.
     */
    function findIndex(array, cb) {
        var index = -1;
        for (var i = 0; array && i < array.length; i++) {
            if (cb(array[i], i)) {
                index = i;
                break;
            }
        }
        return index;
    }
    exports.findIndex = findIndex;
    /**
     * Creates an array of a given size and helper method to populate.
     *
     * @public
     * @param size - Size of array.
     * @param getItem - Callback to populate given cell index.
     */
    function createArray(size, getItem) {
        var array = [];
        for (var i = 0; i < size; i++) {
            array.push(getItem ? getItem(i) : null);
        }
        return array;
    }
    exports.createArray = createArray;
    /**
     * Convert the given array to a matrix with columnCount number
     * of columns.
     *
     * @public
     * @param items - The array to convert
     * @param columnCount - The number of columns for the resulting matrix
     * @returns {any[][]} - A matrix of items
     */
    function toMatrix(items, columnCount) {
        return items.reduce(function (rows, currentValue, index) {
            if (index % columnCount === 0) {
                rows.push([currentValue]);
            }
            else {
                rows[rows.length - 1].push(currentValue);
            }
            return rows;
        }, []);
    }
    exports.toMatrix = toMatrix;
});

//# sourceMappingURL=array.js.map
