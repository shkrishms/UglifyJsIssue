{"version":3,"sources":["components/Dialog/Dialog.tsx"],"names":[],"mappings":"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","file":"components/Dialog/Dialog.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  autobind,\r\n  BaseComponent,\r\n  css,\r\n  getId\r\n} from '../../Utilities';\r\nimport { IDialogProps } from './Dialog.Props';\r\nimport { DialogType } from './DialogContent.Props';\r\nimport { Modal } from '../../Modal';\r\nimport { withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\nimport * as stylesImport from './Dialog.scss';\r\nconst styles: any = stylesImport;\r\n\r\nimport { DialogContent } from './DialogContent';\r\n\r\nexport interface IDialogState {\r\n  id?: string;\r\n}\r\n\r\n@withResponsiveMode\r\nexport class Dialog extends BaseComponent<IDialogProps, IDialogState> {\r\n\r\n  public static defaultProps: IDialogProps = {\r\n    modalProps: {\r\n      isDarkOverlay: true,\r\n      isBlocking: false,\r\n      className: '',\r\n      containerClassName: ''\r\n    },\r\n    dialogContentProps: {\r\n      type: DialogType.normal,\r\n      className: '',\r\n      topButtonsProps: [],\r\n    },\r\n    hidden: true,\r\n  };\r\n\r\n  constructor(props: IDialogProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: getId('Dialog'),\r\n    };\r\n\r\n    this._warnDeprecations({\r\n      'isOpen': 'hidden',\r\n      'type': 'dialogContentProps.type',\r\n      'subText': 'dialogContentProps.subText',\r\n      'contentClassName': 'dialogContentProps.className',\r\n      'topButtonsProps': 'dialogContentProps.topButtonsProps',\r\n      'className': 'modalProps.className',\r\n      'isDarkOverlay': 'modalProps.isDarkOverlay',\r\n      'isBlocking': 'modalProps.isBlocking',\r\n      'containerClassName': 'modalProps.containerClassName',\r\n      'onDismissed': 'modalProps.onDismissed',\r\n      'onLayerDidMount': 'modalProps.onLayerDidMount',\r\n      'ariaDescribedById': 'modalProps.subtitleAriaId',\r\n      'ariaLabelledById': 'modalProps.titleAriaId'\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      ariaDescribedById,\r\n      ariaLabelledById,\r\n      elementToFocusOnDismiss,\r\n      firstFocusableSelector,\r\n      forceFocusInsideTrap,\r\n      ignoreExternalFocusing,\r\n      isBlocking,\r\n      isClickableOutsideFocusTrap,\r\n      isDarkOverlay,\r\n      isOpen,\r\n      className,\r\n      onDismiss,\r\n      onDismissed,\r\n      onLayerDidMount,\r\n      onLayerMounted,\r\n      responsiveMode,\r\n      subText,\r\n      title,\r\n      type,\r\n      contentClassName,\r\n      topButtonsProps,\r\n      dialogContentProps,\r\n      modalProps,\r\n      containerClassName,\r\n      hidden\r\n    } = this.props;\r\n    let { id } = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        elementToFocusOnDismiss={ elementToFocusOnDismiss }\r\n        firstFocusableSelector={ firstFocusableSelector }\r\n        forceFocusInsideTrap={ forceFocusInsideTrap }\r\n        ignoreExternalFocusing={ ignoreExternalFocusing }\r\n        isClickableOutsideFocusTrap={ isClickableOutsideFocusTrap }\r\n        onDismissed={ onDismissed }\r\n        onLayerDidMount={ onLayerDidMount }\r\n        responsiveMode={ responsiveMode }\r\n        { ...modalProps }\r\n        isDarkOverlay={ isDarkOverlay !== undefined ? isDarkOverlay : modalProps!.isDarkOverlay }\r\n        isBlocking={ isBlocking !== undefined ? isBlocking : modalProps!.isBlocking }\r\n        isOpen={ isOpen !== undefined ? isOpen : !hidden }\r\n        className={ css('ms-Dialog', className ? className : modalProps!.className) }\r\n        containerClassName={ css(styles.main, containerClassName ? containerClassName : modalProps!.containerClassName) }\r\n        onDismiss={ onDismiss ? onDismiss : modalProps!.onDismiss }\r\n        subtitleAriaId={\r\n          this._getAriaLabelId(\r\n            (ariaDescribedById ? ariaDescribedById : modalProps!.subtitleAriaId) as string,\r\n            (subText ? subText : modalProps!.subtitleAriaId) as string,\r\n            id + '-subText'\r\n          )\r\n        }\r\n        titleAriaId={\r\n          this._getAriaLabelId(\r\n            (modalProps!.titleAriaId ? modalProps!.titleAriaId : ariaLabelledById) as string,\r\n            (title ? title : modalProps!.titleAriaId) as string,\r\n            id + '-title') }\r\n      >\r\n        <DialogContent\r\n          title={ title }\r\n          subText={ subText }\r\n          showCloseButton={ isBlocking !== undefined ? !isBlocking : !modalProps!.isBlocking }\r\n          topButtonsProps={ topButtonsProps ? topButtonsProps : dialogContentProps!.topButtonsProps }\r\n          type={ type !== undefined ? type : dialogContentProps!.type }\r\n          onDismiss={ onDismiss ? onDismiss : dialogContentProps!.onDismiss }\r\n          className={ css(contentClassName ? contentClassName : dialogContentProps!.className) }\r\n          { ...dialogContentProps }\r\n        >\r\n          { this.props.children }\r\n        </DialogContent>\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _getAriaLabelId(ariaId: string, text: string, alternativeId: string): string {\r\n    return ariaId || text && alternativeId;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}